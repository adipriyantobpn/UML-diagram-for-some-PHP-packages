@startuml
skinparam handwritten true
class yii.jui.Accordion {
    +headerOptions : array = []
    +itemOptions : array = []
    +items : array = []
    +options : array = []
    #renderItems() : string
    +run()
}
class yii.jui.Accordion extends yii.jui.Widget
class yii.jui.AutoComplete {
    +renderWidget() : string
    +run()
}
class yii.jui.AutoComplete extends yii.jui.InputWidget
class yii.jui.DatePicker {
    +attribute : string
    +containerOptions : array = []
    +dateFormat : string
    +inline : boolean = false
    +language : string
    +value : string
    +init()
    #renderWidget() : string
    +run()
}
class yii.jui.DatePicker extends yii.jui.InputWidget
class yii.jui.DatePickerLanguageAsset {
    +autoGenerate : boolean = true
    +depends = [
        \t0 => "yii\jui\JuiAsset"
    ]
    +language : string
    +sourcePath = "@bower/jquery-ui"
    +registerAssetFiles(view)
}
class yii.jui.DatePickerLanguageAsset extends yii.web.AssetBundle
class yii.jui.Dialog {
    +init()
    +run()
}
class yii.jui.Dialog extends yii.jui.Widget
class yii.jui.Draggable {
    #clientEventMap = [
        \t"create" => "dragcreate",
        \t"drag" => "drag",
        \t"stop" => "dragstop",
        \t"start" => "dragstart"
    ]
    +init()
    +run()
}
class yii.jui.Draggable extends yii.jui.Widget
class yii.jui.Droppable {
    #clientEventMap = [
        \t"activate" => "dropactivate",
        \t"create" => "dropcreate",
        \t"deactivate" => "dropdeactivate",
        \t"drop" => "drop",
        \t"out" => "dropout",
        \t"over" => "dropover"
    ]
    +init()
    +run()
}
class yii.jui.Droppable extends yii.jui.Widget
class yii.jui.InputWidget {
    +attribute : string
    +model : yii.base.Model
    +name : string
    +value : string
    #hasModel() : bool
    +init()
}
class yii.jui.InputWidget extends yii.jui.Widget
class yii.jui.JuiAsset {
    +css = [
        \t0 => "themes/smoothness/jquery-ui.css"
    ]
    +depends = [
        \t0 => "yii\web\JqueryAsset"
    ]
    +js = [
        \t0 => "jquery-ui.js"
    ]
    +sourcePath = "@bower/jquery-ui"
}
class yii.jui.JuiAsset extends yii.web.AssetBundle
class yii.jui.Menu {
    +clientEvents : array = []
    +clientOptions : array = []
    +init()
    +run()
}
class yii.jui.Menu extends yii.widgets.Menu
class yii.jui.ProgressBar {
    +init()
    +run()
}
class yii.jui.ProgressBar extends yii.jui.Widget
class yii.jui.Resizable {
    #clientEventMap = [
        \t"create" => "resizecreate",
        \t"resize" => "resize",
        \t"start" => "resizestart",
        \t"stop" => "resizestop"
    ]
    +init()
    +run()
}
class yii.jui.Resizable extends yii.jui.Widget
class yii.jui.Selectable {
    +{static}MODE_BEGIN = "MODE_BEGIN"
    +{static}MODE_DEFAULT = "MODE_DEFAULT"
    +itemOptions : array = []
    +items : array = []
    +mode : string = "MODE_DEFAULT"
    +options : array = []
    +{static}begin(config : array = []) : static
    +init()
    +renderItems() : string
    +run()
}
class yii.jui.Selectable extends yii.jui.Widget
class yii.jui.Slider {
    #clientEventMap = [
        \t"change" => "slidechange",
        \t"create" => "slidecreate",
        \t"slide" => "slide",
        \t"start" => "slidestart",
        \t"stop" => "slidestop"
    ]
    +run()
}
class yii.jui.Slider extends yii.jui.Widget
class yii.jui.SliderInput {
    #clientEventMap = [
        \t"change" => "slidechange",
        \t"create" => "slidecreate",
        \t"slide" => "slide",
        \t"start" => "slidestart",
        \t"stop" => "slidestop"
    ]
    +containerOptions : array = []
    +init()
    +run()
}
class yii.jui.SliderInput extends yii.jui.InputWidget
class yii.jui.Sortable {
    #clientEventMap = [
        \t"activate" => "sortactivate",
        \t"beforeStop" => "sortbeforestop",
        \t"change" => "sortchange",
        \t"create" => "sortcreate",
        \t"deactivate" => "sortdeactivate",
        \t"out" => "sortout",
        \t"over" => "sortover",
        \t"receive" => "sortreceive",
        \t"remove" => "sortremove",
        \t"sort" => "sort",
        \t"start" => "sortstart",
        \t"stop" => "sortstop",
        \t"update" => "sortupdate"
    ]
    +itemOptions : array = []
    +items : array = []
    +options : array = []
    +renderItems() : string
    +run()
}
class yii.jui.Sortable extends yii.jui.Widget
class yii.jui.Spinner {
    #clientEventMap = [
        \t"spin" => "spin",
        \t"change" => "spinchange",
        \t"create" => "spincreate",
        \t"start" => "spinstart",
        \t"stop" => "spinstop"
    ]
    +renderWidget() : string
    +run()
}
class yii.jui.Spinner extends yii.jui.InputWidget
class yii.jui.Tabs {
    +encodeLabels : boolean = true
    +headerOptions : array = []
    +itemOptions : array = []
    +items : array = []
    +linkTemplate : string = "<a href="{url}">{label}</a>"
    +options : array = []
    #renderItems() : string
    +run()
}
class yii.jui.Tabs extends yii.jui.Widget
class yii.jui.Widget {
    #clientEventMap : array = []
    +clientEvents : array = []
    +clientOptions : array = []
    +options : array = []
    +init()
    #registerClientEvents(name : string, id : string)
    #registerClientOptions(name : string, id : string)
    #registerWidget(name : string, id : string = null)
}
class yii.jui.Widget extends yii.base.Widget
@enduml
