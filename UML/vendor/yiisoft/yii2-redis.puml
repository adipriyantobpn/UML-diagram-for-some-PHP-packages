@startuml
skinparam handwritten true
class yii.redis.ActiveQuery {
    +{static}EVENT_INIT = "init"
    +all(db : Connection = null) : array|ActiveRecord[]
    +average(column : string, db : Connection = null) : int
    +column(column : string, db : Connection = null) : array
    +count(q : string = "*", db : Connection = null) : int
    #executeScript(db : Connection|null, type : string, columnName : string = null) : array|bool|null|string
    +exists(db : Connection = null) : bool
    -findByPk(db : Connection, type : string, columnName : string = null) : array|bool|null|string
    +init()
    +max(column : string, db : Connection = null) : int
    +min(column : string, db : Connection = null) : int
    +one(db : Connection = null) : ActiveRecord|array|null
    +scalar(attribute : string, db : Connection = null) : string
    +sum(column : string, db : Connection = null) : int
    +__construct(modelClass : array, config : array = [])
}
class yii.redis.ActiveQuery extends yii.base.Component
class yii.redis.ActiveQuery implements yii.db.ActiveQueryInterface
class yii.redis.ActiveRecord {
    +attributes() : array
    +{static}buildKey(key : mixed) : string
    +{static}deleteAll(condition : array = null) : int
    -{static}fetchPks(condition)
    +{static}find() : ActiveQuery
    +{static}getDb() : Connection
    +insert(runValidation = true, attributes = null)
    +{static}keyPrefix() : string
    +{static}primaryKey() : string[]
    +{static}updateAll(attributes : array, condition : array = null) : int
    +{static}updateAllCounters(counters : array, condition : array = null) : int
}
class yii.redis.ActiveRecord extends yii.db.BaseActiveRecord
class yii.redis.Cache {
    +redis : Connection|string|array = "redis"
    #addValue(key, value, expire)
    #deleteValue(key)
    +exists(key : mixed) : bool
    #flushValues()
    #getValue(key)
    #getValues(keys)
    +init()
    #setValue(key, value, expire)
    #setValues(data, expire)
}
class yii.redis.Cache extends yii.caching.Cache
class yii.redis.Connection {
    +{static}EVENT_AFTER_OPEN = "afterOpen"
    +connectionTimeout : float
    +database : integer = 0
    +dataTimeout : float
    +hostname : string = "localhost"
    +password : string
    +port : integer = 6379
    +redisCommands : array = [
        \t0 => "APPEND",
        \t1 => "AUTH",
        \t2 => "BGREWRITEAOF",
        \t3 => "BGSAVE",
        \t4 => "BITCOUNT",
        \t5 => "BITFIELD",
        \t6 => "BITOP",
        \t7 => "BITPOS",
        \t8 => "BLPOP",
        \t9 => "BRPOP",
        \t10 => "BRPOPLPUSH",
        \t11 => "CLIENT KILL",
        \t12 => "CLIENT LIST",
        \t13 => "CLIENT GETNAME",
        \t14 => "CLIENT PAUSE",
        \t15 => "CLIENT REPLY",
        \t16 => "CLIENT SETNAME",
        \t17 => "CLUSTER ADDSLOTS",
        \t18 => "CLUSTER COUNTKEYSINSLOT",
        \t19 => "CLUSTER DELSLOTS",
        \t20 => "CLUSTER FAILOVER",
        \t21 => "CLUSTER FORGET",
        \t22 => "CLUSTER GETKEYSINSLOT",
        \t23 => "CLUSTER INFO",
        \t24 => "CLUSTER KEYSLOT",
        \t25 => "CLUSTER MEET",
        \t26 => "CLUSTER NODES",
        \t27 => "CLUSTER REPLICATE",
        \t28 => "CLUSTER RESET",
        \t29 => "CLUSTER SAVECONFIG",
        \t30 => "CLUSTER SETSLOT",
        \t31 => "CLUSTER SLAVES",
        \t32 => "CLUSTER SLOTS",
        \t33 => "COMMAND",
        \t34 => "COMMAND COUNT",
        \t35 => "COMMAND GETKEYS",
        \t36 => "COMMAND INFO",
        \t37 => "CONFIG GET",
        \t38 => "CONFIG REWRITE",
        \t39 => "CONFIG SET",
        \t40 => "CONFIG RESETSTAT",
        \t41 => "DBSIZE",
        \t42 => "DEBUG OBJECT",
        \t43 => "DEBUG SEGFAULT",
        \t44 => "DECR",
        \t45 => "DECRBY",
        \t46 => "DEL",
        \t47 => "DISCARD",
        \t48 => "DUMP",
        \t49 => "ECHO",
        \t50 => "EVAL",
        \t51 => "EVALSHA",
        \t52 => "EXEC",
        \t53 => "EXISTS",
        \t54 => "EXPIRE",
        \t55 => "EXPIREAT",
        \t56 => "FLUSHALL",
        \t57 => "FLUSHDB",
        \t58 => "GEOADD",
        \t59 => "GEOHASH",
        \t60 => "GEOPOS",
        \t61 => "GEODIST",
        \t62 => "GEORADIUS",
        \t63 => "GEORADIUSBYMEMBER",
        \t64 => "GET",
        \t65 => "GETBIT",
        \t66 => "GETRANGE",
        \t67 => "GETSET",
        \t68 => "HDEL",
        \t69 => "HEXISTS",
        \t70 => "HGET",
        \t71 => "HGETALL",
        \t72 => "HINCRBY",
        \t73 => "HINCRBYFLOAT",
        \t74 => "HKEYS",
        \t75 => "HLEN",
        \t76 => "HMGET",
        \t77 => "HMSET",
        \t78 => "HSET",
        \t79 => "HSETNX",
        \t80 => "HSTRLEN",
        \t81 => "HVALS",
        \t82 => "INCR",
        \t83 => "INCRBY",
        \t84 => "INCRBYFLOAT",
        \t85 => "INFO",
        \t86 => "KEYS",
        \t87 => "LASTSAVE",
        \t88 => "LINDEX",
        \t89 => "LINSERT",
        \t90 => "LLEN",
        \t91 => "LPOP",
        \t92 => "LPUSH",
        \t93 => "LPUSHX",
        \t94 => "LRANGE",
        \t95 => "LREM",
        \t96 => "LSET",
        \t97 => "LTRIM",
        \t98 => "MGET",
        \t99 => "MIGRATE",
        \t100 => "MONITOR",
        \t101 => "MOVE",
        \t102 => "MSET",
        \t103 => "MSETNX",
        \t104 => "MULTI",
        \t105 => "OBJECT",
        \t106 => "PERSIST",
        \t107 => "PEXPIRE",
        \t108 => "PEXPIREAT",
        \t109 => "PFADD",
        \t110 => "PFCOUNT",
        \t111 => "PFMERGE",
        \t112 => "PING",
        \t113 => "PSETEX",
        \t114 => "PSUBSCRIBE",
        \t115 => "PUBSUB",
        \t116 => "PTTL",
        \t117 => "PUBLISH",
        \t118 => "PUNSUBSCRIBE",
        \t119 => "QUIT",
        \t120 => "RANDOMKEY",
        \t121 => "READONLY",
        \t122 => "READWRITE",
        \t123 => "RENAME",
        \t124 => "RENAMENX",
        \t125 => "RESTORE",
        \t126 => "ROLE",
        \t127 => "RPOP",
        \t128 => "RPOPLPUSH",
        \t129 => "RPUSH",
        \t130 => "RPUSHX",
        \t131 => "SADD",
        \t132 => "SAVE",
        \t133 => "SCARD",
        \t134 => "SCRIPT DEBUG",
        \t135 => "SCRIPT EXISTS",
        \t136 => "SCRIPT FLUSH",
        \t137 => "SCRIPT KILL",
        \t138 => "SCRIPT LOAD",
        \t139 => "SDIFF",
        \t140 => "SDIFFSTORE",
        \t141 => "SELECT",
        \t142 => "SET",
        \t143 => "SETBIT",
        \t144 => "SETEX",
        \t145 => "SETNX",
        \t146 => "SETRANGE",
        \t147 => "SHUTDOWN",
        \t148 => "SINTER",
        \t149 => "SINTERSTORE",
        \t150 => "SISMEMBER",
        \t151 => "SLAVEOF",
        \t152 => "SLOWLOG",
        \t153 => "SMEMBERS",
        \t154 => "SMOVE",
        \t155 => "SORT",
        \t156 => "SPOP",
        \t157 => "SRANDMEMBER",
        \t158 => "SREM",
        \t159 => "STRLEN",
        \t160 => "SUBSCRIBE",
        \t161 => "SUNION",
        \t162 => "SUNIONSTORE",
        \t163 => "SWAPDB",
        \t164 => "SYNC",
        \t165 => "TIME",
        \t166 => "TOUCH",
        \t167 => "TTL",
        \t168 => "TYPE",
        \t169 => "UNSUBSCRIBE",
        \t170 => "UNLINK",
        \t171 => "UNWATCH",
        \t172 => "WAIT",
        \t173 => "WATCH",
        \t174 => "ZADD",
        \t175 => "ZCARD",
        \t176 => "ZCOUNT",
        \t177 => "ZINCRBY",
        \t178 => "ZINTERSTORE",
        \t179 => "ZLEXCOUNT",
        \t180 => "ZRANGE",
        \t181 => "ZRANGEBYLEX",
        \t182 => "ZREVRANGEBYLEX",
        \t183 => "ZRANGEBYSCORE",
        \t184 => "ZRANK",
        \t185 => "ZREM",
        \t186 => "ZREMRANGEBYLEX",
        \t187 => "ZREMRANGEBYRANK",
        \t188 => "ZREMRANGEBYSCORE",
        \t189 => "ZREVRANGE",
        \t190 => "ZREVRANGEBYSCORE",
        \t191 => "ZREVRANK",
        \t192 => "ZSCORE",
        \t193 => "ZUNIONSTORE",
        \t194 => "SCAN",
        \t195 => "SSCAN",
        \t196 => "HSCAN",
        \t197 => "ZSCAN"
    ]
    +socketClientFlags : integer = 4
    +unixSocket : string
    -_socket : resource = false
    +close()
    +executeCommand(name : string, params : array = []) : array|bool|null|string
    +getDriverName() : string
    +getIsActive() : bool
    +getLuaScriptBuilder() : LuaScriptBuilder
    #initConnection()
    +open()
    -parseResponse(command : string) : mixed
    +__call(name : string, params : array) : mixed
    +__sleep() : array
}
class yii.redis.Connection extends yii.base.Component
class yii.redis.LuaScriptBuilder {
    -addColumn(column : string, columns : array) : string
    -build(query : ActiveQuery, buildResult : string, return : string) : string
    +buildAll(query : ActiveQuery) : string
    -buildAndCondition(operator, operands, columns)
    +buildAverage(query : ActiveQuery, column : string) : string
    -buildBetweenCondition(operator, operands, columns)
    +buildColumn(query : ActiveQuery, column : string) : string
    #buildCompositeInCondition(operator, inColumns, values, columns)
    +buildCondition(condition : string|array, columns : array) : string
    +buildCount(query : ActiveQuery) : string
    -buildHashCondition(condition, columns)
    -buildInCondition(operator, operands, columns)
    -buildLikeCondition(operator, operands, columns)
    +buildMax(query : ActiveQuery, column : string) : string
    +buildMin(query : ActiveQuery, column : string) : string
    -buildNotCondition(operator, operands, params)
    +buildOne(query : ActiveQuery) : string
    +buildSum(query : ActiveQuery, column : string) : string
    -quoteValue(str : string) : string
}
class yii.redis.LuaScriptBuilder extends yii.base.Object
class yii.redis.Mutex {
    +expire : int = 30
    +keyPrefix : string
    +redis : Connection|string|array = "redis"
    -_lockValues : array = []
    #acquireLock(name : string, timeout : int = 0) : bool
    #calculateKey(name : string) : string
    +init()
    #releaseLock(name : string) : bool
}
class yii.redis.Mutex extends yii.mutex.Mutex
class yii.redis.Session {
    +keyPrefix : string
    +redis : Connection|string|array = "redis"
    #calculateKey(id : string) : string
    +destroySession(id : string) : bool
    +getUseCustomStorage() : bool
    +init()
    +readSession(id : string) : string
    +writeSession(id : string, data : string) : bool
}
class yii.redis.Session extends yii.web.Session
@enduml
