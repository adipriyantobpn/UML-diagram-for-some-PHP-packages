@startuml
skinparam handwritten true
class yii.helpers.ArrayHelper {
}
class yii.helpers.ArrayHelper extends yii.helpers.BaseArrayHelper
class yii.helpers.BaseArrayHelper {
    +{static}filter(array : array, filters : array) : array
    +{static}getColumn(array : array, name : string|.Closure, keepKeys : bool = true) : array
    +{static}getValue(array : array|object, key : string|.Closure|array, default : mixed = null) : mixed
    +{static}htmlDecode(data : array, valuesOnly : bool = true) : array
    +{static}htmlEncode(data : array, valuesOnly : bool = true, charset : string = null) : array
    +{static}index(array : array, key : string|.Closure|null, groups : string|string[]|.Closure[]|null = []) : array
    +{static}isAssociative(array : array, allStrings : bool = true) : bool
    +{static}isIn(needle : mixed, haystack : array|.Traversable, strict : bool = false) : bool
    +{static}isIndexed(array : array, consecutive : bool = false) : bool
    +{static}isSubset(needles : array|.Traversable, haystack : array|.Traversable, strict : bool = false) : bool
    +{static}isTraversable(var : mixed) : bool
    +{static}keyExists(key : string, array : array, caseSensitive : bool = true) : bool
    +{static}map(array : array, from : string|.Closure, to : string|.Closure, group : string|.Closure = null) : array
    +{static}merge(a : array, b : array) : array
    +{static}multisort(array : array, key : string|.Closure|array, direction : int|array = 4, sortFlag : int|array = 0)
    +{static}remove(array : array, key : string, default : mixed = null) : mixed|null
    +{static}removeValue(array : array, value : string) : array
    +{static}setValue(array : array, path : string|array|null, value : mixed)
    +{static}toArray(object : object|array|string, properties : array = [], recursive : bool = true) : array
}
class yii.helpers.BaseConsole {
    +{static}BG_BLACK = 40
    +{static}BG_BLUE = 44
    +{static}BG_CYAN = 46
    +{static}BG_GREEN = 42
    +{static}BG_GREY = 47
    +{static}BG_PURPLE = 45
    +{static}BG_RED = 41
    +{static}BG_YELLOW = 43
    +{static}BLINK = 5
    +{static}BOLD = 1
    +{static}CONCEALED = 8
    +{static}CROSSED_OUT = 9
    +{static}ENCIRCLED = 52
    +{static}FG_BLACK = 30
    +{static}FG_BLUE = 34
    +{static}FG_CYAN = 36
    +{static}FG_GREEN = 32
    +{static}FG_GREY = 37
    +{static}FG_PURPLE = 35
    +{static}FG_RED = 31
    +{static}FG_YELLOW = 33
    +{static}FRAMED = 51
    +{static}ITALIC = 3
    +{static}NEGATIVE = 7
    +{static}NORMAL = 0
    +{static}OVERLINED = 53
    +{static}RESET = 0
    +{static}UNDERLINE = 4
    -_progressEta
    -_progressEtaLastDone = 0
    -_progressEtaLastUpdate
    -_progressPrefix
    -_progressStart
    -_progressWidth
    +{static}ansiFormat(string : string, format : array = []) : string
    +{static}ansiFormatCode(format : array) : string
    +{static}ansiStrlen(string : string) : int
    +{static}ansiToHtml(string : string, styleMap : array = []) : string
    +{static}beginAnsiFormat(format : array)
    +{static}clearLine()
    +{static}clearLineAfterCursor()
    +{static}clearLineBeforeCursor()
    +{static}clearScreen()
    +{static}clearScreenAfterCursor()
    +{static}clearScreenBeforeCursor()
    +{static}confirm(message : string, default : bool = false) : bool
    +{static}endAnsiFormat()
    +{static}endProgress(remove : string|bool = false, keepPrefix : bool = true)
    +{static}error(string : string = null) : int|bool
    +{static}escape(string : string) : string
    +{static}getScreenSize(refresh : bool = false) : array|bool
    +{static}hideCursor()
    +{static}input(prompt : string = null) : string
    +{static}isRunningOnWindows() : bool
    +{static}markdownToAnsi(markdown : string) : string
    +{static}moveCursorBackward(steps : int = 1)
    +{static}moveCursorDown(rows : int = 1)
    +{static}moveCursorForward(steps : int = 1)
    +{static}moveCursorNextLine(lines : int = 1)
    +{static}moveCursorPrevLine(lines : int = 1)
    +{static}moveCursorTo(column : int, row : int|null = null)
    +{static}moveCursorUp(rows : int = 1)
    +{static}output(string : string = null) : int|bool
    +{static}prompt(text : string, options : array = []) : string
    +{static}renderColoredString(string : string, colored : bool = true) : string
    +{static}restoreCursorPosition()
    +{static}saveCursorPosition()
    +{static}scrollDown(lines : int = 1)
    +{static}scrollUp(lines : int = 1)
    +{static}select(prompt : string, options : array = []) : string
    +{static}showCursor()
    +{static}startProgress(done : int, total : int, prefix : string = "", width : int|bool = null)
    +{static}stderr(string : string) : int|bool
    +{static}stdin(raw : bool = false) : string
    +{static}stdout(string : string) : int|bool
    +{static}streamSupportsAnsiColors(stream : mixed) : bool
    +{static}stripAnsiFormat(string : string) : string
    +{static}updateProgress(done : int, total : int, prefix : string = null)
    +{static}wrapText(text : string, indent : int = 0, refresh : bool = false) : string
    +{static}xtermBgColor(colorCode : int) : string
    +{static}xtermFgColor(colorCode : int) : string
}
class yii.helpers.BaseFileHelper {
    +{static}PATTERN_CASE_INSENSITIVE = 32
    +{static}PATTERN_ENDSWITH = 4
    +{static}PATTERN_MUSTBEDIR = 8
    +{static}PATTERN_NEGATIVE = 16
    +{static}PATTERN_NODIR = 1
    +mimeMagicFile : string = "@yii/helpers/mimeTypes.php"
    -_mimeTypes = []
    +{static}copyDirectory(src : string, dst : string, options : array = [])
    +{static}createDirectory(path : string, mode : int = 509, recursive : bool = true) : bool
    +{static}filterPath(path : string, options : array) : bool
    +{static}findFiles(dir : string, options : array = []) : array
    -{static}firstWildcardInPattern(pattern : string) : int|bool
    +{static}getExtensionsByMimeType(mimeType : string, magicFile : string = null) : array
    +{static}getMimeType(file : string, magicFile : string = null, checkExtension : bool = true) : string
    +{static}getMimeTypeByExtension(file : string, magicFile : string = null) : string|null
    -{static}lastExcludeMatchingFromList(basePath : string, path : string, excludes : array) : array|null
    #{static}loadMimeTypes(magicFile : string) : array
    +{static}localize(file : string, language : string = null, sourceLanguage : string = null) : string
    -{static}matchBasename(baseName : string, pattern : string, firstWildcard : int|bool, flags : int) : bool
    -{static}matchPathname(path : string, basePath : string, pattern : string, firstWildcard : int|bool, flags : int) : bool
    #{static}normalizeOptions(options : array) : array
    +{static}normalizePath(path : string, ds : string = "\") : string
    -{static}parseExcludePattern(pattern : string, caseSensitive : bool) : array
    +{static}removeDirectory(dir : string, options : array = [])
}
class yii.helpers.BaseFormatConverter {
    +juiFallbackDatePatterns : array = [["d/m/y", "", "d/m/y"], ["M d, yy", "", "M d, yy"], ["MM d, yy", "", "MM d, yy"], ["DD, MM d, yy", "", "DD, MM d, yy"]]
    +phpFallbackDatePatterns : array = [["n/j/y", "H:i", "n/j/y H:i"], ["M j, Y", "g:i:s A", "M j, Y g:i:s A"], ["F j, Y", "g:i:sA", "F j, Y g:i:sA"], ["l, F j, Y", "g:i:sA T", "l, F j, Y g:i:sA T"]]
    -_icuShortFormats = [3, 2, 1, 0]
    +{static}convertDateIcuToJui(pattern : string, type : string = "date", locale : string = null) : string
    +{static}convertDateIcuToPhp(pattern : string, type : string = "date", locale : string = null) : string
    +{static}convertDatePhpToIcu(pattern : string) : string
    +{static}convertDatePhpToJui(pattern : string) : string
}
class yii.helpers.BaseHtml {
    +attributeOrder : array = ["type", "id", "class", "name", "value", "href", "src", "srcset", "form", "action", "method", "selected", "checked", "readonly", "disabled", "multiple", "size", "maxlength", "width", "height", "rows", "cols", "alt", "title", "rel", "media"]
    +attributeRegex : string = "/(^|.*\])([\w\.\+]+)(\[.*|$)/u"
    +dataAttributes : array = ["data", "data-ng", "ng"]
    +voidElements : array = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
    +{static}a(text : string, url : array|string|null = null, options : array = []) : string
    #{static}activeBooleanInput(type : string, model : Model, attribute : string, options : array = []) : string
    +{static}activeCheckbox(model : Model, attribute : string, options : array = []) : string
    +{static}activeCheckboxList(model : Model, attribute : string, items : array, options : array = []) : string
    +{static}activeDropDownList(model : Model, attribute : string, items : array, options : array = []) : string
    +{static}activeFileInput(model : Model, attribute : string, options : array = []) : string
    +{static}activeHiddenInput(model : Model, attribute : string, options : array = []) : string
    +{static}activeHint(model : Model, attribute : string, options : array = []) : string
    +{static}activeInput(type : string, model : Model, attribute : string, options : array = []) : string
    +{static}activeLabel(model : Model, attribute : string, options : array = []) : string
    +{static}activeListBox(model : Model, attribute : string, items : array, options : array = []) : string
    #{static}activeListInput(type : string, model : Model, attribute : string, items : array, options : array = []) : string
    +{static}activePasswordInput(model : Model, attribute : string, options : array = []) : string
    +{static}activeRadio(model : Model, attribute : string, options : array = []) : string
    +{static}activeRadioList(model : Model, attribute : string, items : array, options : array = []) : string
    +{static}activeTextarea(model : Model, attribute : string, options : array = []) : string
    +{static}activeTextInput(model : Model, attribute : string, options : array = []) : string
    +{static}addCssClass(options : array, class : string|array)
    +{static}addCssStyle(options : array, style : string|array, overwrite : bool = true)
    +{static}beginForm(action : array|string = "", method : string = "post", options : array = []) : string
    +{static}beginTag(name : string|bool|null, options : array = []) : string
    #{static}booleanInput(type : string, name : string, checked : bool = false, options : array = []) : string
    +{static}button(content : string = "Button", options : array = []) : string
    +{static}buttonInput(label : string = "Button", options : array = []) : string
    +{static}checkbox(name : string, checked : bool = false, options : array = []) : string
    +{static}checkboxList(name : string, selection : string|array|null = null, items : array = [], options : array = []) : string
    +{static}csrfMetaTags() : string
    +{static}cssFile(url : array|string, options : array = []) : string
    +{static}cssStyleFromArray(style : array) : string
    +{static}cssStyleToArray(style : string) : array
    +{static}decode(content : string) : string
    +{static}dropDownList(name : string, selection : string|array|null = null, items : array = [], options : array = []) : string
    +{static}encode(content : string, doubleEncode : bool = true) : string
    +{static}endForm() : string
    +{static}endTag(name : string|bool|null) : string
    +{static}error(model : Model, attribute : string, options : array = []) : string
    +{static}errorSummary(models : Model|Model[], options : array = []) : string
    +{static}escapeJsRegularExpression(regexp : string) : string
    +{static}fileInput(name : string, value : string = null, options : array = []) : string
    +{static}getAttributeName(attribute : string) : string
    +{static}getAttributeValue(model : Model, attribute : string) : string|array
    +{static}getInputId(model : Model, attribute : string) : string
    +{static}getInputName(model : Model, attribute : string) : string
    +{static}hiddenInput(name : string, value : string = null, options : array = []) : string
    +{static}img(src : array|string, options : array = []) : string
    +{static}input(type : string, name : string = null, value : string = null, options : array = []) : string
    +{static}jsFile(url : string, options : array = []) : string
    +{static}label(content : string, for : string = null, options : array = []) : string
    +{static}listBox(name : string, selection : string|array|null = null, items : array = [], options : array = []) : string
    +{static}mailto(text : string, email : string = null, options : array = []) : string
    -{static}mergeCssClasses(existingClasses : array, additionalClasses : array) : array
    -{static}normalizeMaxLength(model : Model, attribute : string, options : array)
    +{static}ol(items : array|.Traversable, options : array = []) : string
    +{static}passwordInput(name : string, value : string = null, options : array = []) : string
    +{static}radio(name : string, checked : bool = false, options : array = []) : string
    +{static}radioList(name : string, selection : string|array|null = null, items : array = [], options : array = []) : string
    +{static}removeCssClass(options : array, class : string|array)
    +{static}removeCssStyle(options : array, properties : string|array)
    +{static}renderSelectOptions(selection : string|array|null, items : array, tagOptions : array = []) : string
    +{static}renderTagAttributes(attributes : array) : string
    +{static}resetButton(content : string = "Reset", options : array = []) : string
    +{static}resetInput(label : string = "Reset", options : array = []) : string
    +{static}script(content : string, options : array = []) : string
    +{static}style(content : string, options : array = []) : string
    +{static}submitButton(content : string = "Submit", options : array = []) : string
    +{static}submitInput(label : string = "Submit", options : array = []) : string
    +{static}tag(name : string|bool|null, content : string = "", options : array = []) : string
    +{static}textarea(name : string, value : string = "", options : array = []) : string
    +{static}textInput(name : string, value : string = null, options : array = []) : string
    +{static}ul(items : array|.Traversable, options : array = []) : string
    -{static}wrapIntoCondition(content : string, condition : string) : string
}
class yii.helpers.BaseHtmlPurifier {
    #{static}configure(config : HTMLPurifier_Config)
    +{static}process(content : string, config : array|.Closure|null = null) : string
}
class yii.helpers.BaseInflector {
    +{static}TRANSLITERATE_LOOSE = "Any-Latin; Latin-ASCII; [\u0080-\uffff] remove"
    +{static}TRANSLITERATE_MEDIUM = "Any-Latin; Latin-ASCII"
    +{static}TRANSLITERATE_STRICT = "Any-Latin; NFKD"
    +plurals : array = ["\1", "\1", "\1oves", "\1eet", "\1umans", "\1tatuses", "\1taff", "\1eeth", "\1zes", "\1\2en", "\1ice", "\1ices", "\1es", "\1ies", "\1s", "\1\2ves", "ses", "\1a", "\1eople", "\1en", "\1hildren", "\1oes", "\1i", "uses", "\1es", "\1es", "\1ies", "s", "", "s"]
    +singulars : array = ["\1", "\1", "\1tatus", "\1oot", "\1ooth", "\1\2", "\1", "\1ix", "\1ex", "\1", "\1", "\1us", "\1", "\1is", "\1", "\1", "ouse", "\1us", "\1ouse", "\1", "\1\2ovie", "\1\2eries", "\1y", "\1f", "\1", "\1", "\1", "\1fe", "\1sis", "\1\2sis", "\1um", "\1\2erson", "\1an", "\1\2hild", "\1\2ews", "\1\2etherlands", "eau", "\1y", "\1", ""]
    +specials : array = ["atlases", "beefs", "brothers", "cafes", "children", "cookies", "corpuses", "cows", "curves", "foes", "ganglions", "genies", "genera", "graffiti", "hoofs", "loaves", "men", "monies", "mongooses", "moves", "mythoi", "niches", "numina", "occiputs", "octopuses", "opuses", "oxen", "pasta", "penises", "sexes", "soliloquies", "testes", "trilbys", "turfs", "waves", "Amoyese", "bison", "Borghese", "bream", "breeches", "britches", "buffalo", "cantus", "carp", "chassis", "clippers", "cod", "coitus", "Congoese", "contretemps", "corps", "debris", "diabetes", "djinn", "eland", "elk", "equipment", "Faroese", "flounder", "Foochowese", "gallows", "Genevese", "Genoese", "Gilbertese", "graffiti", "headquarters", "herpes", "hijinks", "Hottentotese", "information", "innings", "jackanapes", "Kiplingese", "Kongoese", "Lucchese", "mackerel", "Maltese", "mews", "moose", "mumps", "Nankingese", "news", "nexus", "Niasese", "Pekingese", "Piedmontese", "pincers", "Pistoiese", "pliers", "Portuguese", "proceedings", "rabies", "rice", "rhinoceros", "salmon", "Sarawakese", "scissors", "series", "Shavese", "shears", "siemens", "species", "swine", "testes", "trousers", "trout", "tuna", "Vermontese", "Wenchowese", "whiting", "wildebeest", "Yengeese"]
    +transliteration : array = ["A", "A", "A", "A", "A", "A", "AE", "C", "E", "E", "E", "E", "I", "I", "I", "I", "D", "N", "O", "O", "O", "O", "O", "O", "O", "U", "U", "U", "U", "U", "Y", "TH", "ss", "a", "a", "a", "a", "a", "a", "ae", "c", "e", "e", "e", "e", "i", "i", "i", "i", "d", "n", "o", "o", "o", "o", "o", "o", "o", "u", "u", "u", "u", "u", "y", "th", "y"]
    +transliterator : mixed = "Any-Latin; Latin-ASCII; [\u0080-\uffff] remove"
    +{static}camel2id(name : string, separator : string = "-", strict : bool|string = false) : string
    +{static}camel2words(name : string, ucwords : bool = true) : string
    +{static}camelize(word : string) : string
    +{static}classify(tableName : string) : string
    #{static}hasIntl() : bool
    +{static}humanize(word : string, ucAll : bool = false) : string
    +{static}id2camel(id : string, separator : string = "-") : string
    +{static}ordinalize(number : int) : string
    +{static}pluralize(word : string) : string
    +{static}sentence(words : array, twoWordsConnector : string = null, lastWordConnector : string = null, connector : string = ", ") : string
    +{static}singularize(word : string) : string
    +{static}slug(string : string, replacement : string = "-", lowercase : bool = true) : string
    +{static}tableize(className : string) : string
    +{static}titleize(words : string, ucAll : bool = false) : string
    +{static}transliterate(string : string, transliterator : string|.Transliterator = null) : string
    +{static}underscore(words : string) : string
    +{static}variablize(word : string) : string
}
class yii.helpers.BaseJson {
    +jsonErrorMessages : array = ["The maximum stack depth has been exceeded.", "Invalid or malformed JSON.", "Control character error, possibly incorrectly encoded.", "Syntax error.", "Malformed UTF-8 characters, possibly incorrectly encoded.", "One or more recursive references in the value to be encoded.", "One or more NAN or INF values in the value to be encoded", "A value of a type that cannot be encoded was given"]
    +{static}decode(json : string, asArray : bool = true) : mixed
    +{static}encode(value : mixed, options : int = 320) : string
    #{static}handleJsonError(lastError : int)
    +{static}htmlEncode(value : mixed) : string
    #{static}processData(data : mixed, expressions : array, expPrefix : string) : mixed
}
class yii.helpers.BaseMarkdown {
    +defaultFlavor : string = "original"
    +flavors : array = [["cebe\markdown\Markdown", true], ["cebe\markdown\GithubMarkdown", true], ["cebe\markdown\GithubMarkdown", true, true], ["cebe\markdown\MarkdownExtra", true]]
    #{static}getParser(flavor : string) : cebe.markdown.Parser
    +{static}process(markdown : string, flavor : string = null) : string
    +{static}processParagraph(markdown : string, flavor : string = null) : string
}
class yii.helpers.BaseStringHelper {
    +{static}base64UrlDecode(input : string) : string
    +{static}base64UrlEncode(input : string) : string
    +{static}basename(path : string, suffix : string = "") : string
    +{static}byteLength(string : string) : int
    +{static}byteSubstr(string : string, start : int, length : int = null) : string
    +{static}countWords(string : string) : int
    +{static}dirname(path : string) : string
    +{static}endsWith(string : string, with : string, caseSensitive : bool = true) : bool
    +{static}explode(string : string, delimiter : string = ",", trim : mixed = true, skipEmpty : bool = false) : array
    +{static}floatToString(number : float|int) : string
    +{static}normalizeNumber(value : int|float|string) : string
    +{static}startsWith(string : string, with : string, caseSensitive : bool = true) : bool
    +{static}truncate(string : string, length : int, suffix : string = "...", encoding : string = null, asHtml : bool = false) : string
    #{static}truncateHtml(string : string, count : int, suffix : string, encoding : string|bool = false) : string
    +{static}truncateWords(string : string, count : int, suffix : string = "...", asHtml : bool = false) : string
}
class yii.helpers.BaseUrl {
    +urlManager : yii.web.UrlManager
    +{static}base(scheme : bool|string = false) : string
    +{static}canonical() : string
    +{static}current(params : array = [], scheme : bool|string = false) : string
    +{static}ensureScheme(url : string, scheme : string) : string
    #{static}getUrlManager() : yii.web.UrlManager
    +{static}home(scheme : bool|string = false) : string
    +{static}isRelative(url : string) : bool
    #{static}normalizeRoute(route : string) : string
    +{static}previous(name : string = null) : string|null
    +{static}remember(url : string|array = "", name : string = null)
    +{static}to(url : array|string = "", scheme : bool|string = false) : string
    +{static}toRoute(route : string|array, scheme : bool|string = false) : string
}
class yii.helpers.BaseVarDumper {
    -_depth
    -_objects
    -_output
    +{static}dump(var : mixed, depth : int = 10, highlight : bool = false)
    +{static}dumpAsString(var : mixed, depth : int = 10, highlight : bool = false) : string
    -{static}dumpInternal(var : mixed, level : int)
    +{static}export(var : mixed) : string
    -{static}exportClosure(closure : Closure) : string
    -{static}exportInternal(var : mixed, level : int)
}
class yii.helpers.Console {
    +{static}BG_BLACK = 40
    +{static}BG_BLUE = 44
    +{static}BG_CYAN = 46
    +{static}BG_GREEN = 42
    +{static}BG_GREY = 47
    +{static}BG_PURPLE = 45
    +{static}BG_RED = 41
    +{static}BG_YELLOW = 43
    +{static}BLINK = 5
    +{static}BOLD = 1
    +{static}CONCEALED = 8
    +{static}CROSSED_OUT = 9
    +{static}ENCIRCLED = 52
    +{static}FG_BLACK = 30
    +{static}FG_BLUE = 34
    +{static}FG_CYAN = 36
    +{static}FG_GREEN = 32
    +{static}FG_GREY = 37
    +{static}FG_PURPLE = 35
    +{static}FG_RED = 31
    +{static}FG_YELLOW = 33
    +{static}FRAMED = 51
    +{static}ITALIC = 3
    +{static}NEGATIVE = 7
    +{static}NORMAL = 0
    +{static}OVERLINED = 53
    +{static}RESET = 0
    +{static}UNDERLINE = 4
}
class yii.helpers.Console extends yii.helpers.BaseConsole
class yii.helpers.FileHelper {
    +{static}PATTERN_CASE_INSENSITIVE = 32
    +{static}PATTERN_ENDSWITH = 4
    +{static}PATTERN_MUSTBEDIR = 8
    +{static}PATTERN_NEGATIVE = 16
    +{static}PATTERN_NODIR = 1
}
class yii.helpers.FileHelper extends yii.helpers.BaseFileHelper
class yii.helpers.FormatConverter {
}
class yii.helpers.FormatConverter extends yii.helpers.BaseFormatConverter
class yii.helpers.Html {
}
class yii.helpers.Html extends yii.helpers.BaseHtml
class yii.helpers.HtmlPurifier {
}
class yii.helpers.HtmlPurifier extends yii.helpers.BaseHtmlPurifier
class yii.helpers.Inflector {
    +{static}TRANSLITERATE_LOOSE = "Any-Latin; Latin-ASCII; [\u0080-\uffff] remove"
    +{static}TRANSLITERATE_MEDIUM = "Any-Latin; Latin-ASCII"
    +{static}TRANSLITERATE_STRICT = "Any-Latin; NFKD"
}
class yii.helpers.Inflector extends yii.helpers.BaseInflector
class yii.helpers.Json {
}
class yii.helpers.Json extends yii.helpers.BaseJson
class yii.helpers.Markdown {
}
class yii.helpers.Markdown extends yii.helpers.BaseMarkdown
class yii.helpers.ReplaceArrayValue {
    +value : mixed
    +__construct(value : mixed)
}
class yii.helpers.StringHelper {
}
class yii.helpers.StringHelper extends yii.helpers.BaseStringHelper
class yii.helpers.UnsetArrayValue {
}
class yii.helpers.Url {
}
class yii.helpers.Url extends yii.helpers.BaseUrl
class yii.helpers.VarDumper {
}
class yii.helpers.VarDumper extends yii.helpers.BaseVarDumper
@enduml
