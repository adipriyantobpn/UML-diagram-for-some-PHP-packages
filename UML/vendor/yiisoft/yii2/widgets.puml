@startuml
skinparam handwritten true
class yii.widgets.ActiveField {
    +addAriaAttributes : bool = true
    +attribute : string
    +enableAjaxValidation : bool
    +enableClientValidation : bool
    +errorOptions : array = ["help-block"]
    +form : ActiveForm
    +hintOptions : array = ["hint-block"]
    +inputOptions : array = ["form-control"]
    +labelOptions : array = ["control-label"]
    +model : yii.base.Model
    +options : array = ["form-group"]
    +parts : array = []
    +selectors : array = []
    +template : string = "{label}\\n{input}\\n{hint}\\n{error}"
    +validateOnBlur : bool
    +validateOnChange : bool
    +validateOnType : bool
    +validationDelay : int
    -_inputId : string
    -_skipLabelFor : bool = false
    #addAriaAttributes(options)
    #adjustLabelFor(options : array)
    +begin() : string
    +checkbox(options : array = [], enclosedByLabel : bool = true) : $this
    +checkboxList(items : array, options : array = []) : $this
    +dropDownList(items : array, options : array = []) : $this
    +end() : string
    +error(options : array|false = []) : $this
    +fileInput(options : array = []) : $this
    #getClientOptions() : array
    #getInputId() : string
    +hiddenInput(options : array = []) : $this
    +hint(content : string|bool, options : array = []) : $this
    +input(type : string, options : array = []) : $this
    #isAjaxValidationEnabled() : bool
    #isClientValidationEnabled() : bool
    +label(label : null|string|false = null, options : null|array = []) : $this
    +listBox(items : array, options : array = []) : $this
    +passwordInput(options : array = []) : $this
    +radio(options : array = [], enclosedByLabel : bool = true) : $this
    +radioList(items : array, options : array = []) : $this
    +render(content : string|callable = null) : string
    +textarea(options : array = []) : $this
    +textInput(options : array = []) : $this
    +widget(class : string, config : array = []) : $this
    +__toString() : string
}
class yii.widgets.ActiveField extends yii.base.Component
class yii.widgets.ActiveForm {
    +action : array|string = ""
    +ajaxDataType : string = "json"
    +ajaxParam : string = "ajax"
    +attributes : array = []
    +enableAjaxValidation : bool = false
    +enableClientScript : bool = true
    +enableClientValidation : bool = true
    +encodeErrorSummary : bool = true
    +errorCssClass : string = "has-error"
    +errorSummaryCssClass : string = "error-summary"
    +fieldClass : string = "yii\widgets\ActiveField"
    +fieldConfig : array|.Closure = []
    +method : string = "post"
    +options : array = []
    +requiredCssClass : string = "required"
    +scrollToError : bool = true
    +scrollToErrorOffset : int = 0
    +successCssClass : string = "has-success"
    +validateOnBlur : bool = true
    +validateOnChange : bool = true
    +validateOnSubmit : bool = true
    +validateOnType : bool = false
    +validatingCssClass : string = "validating"
    +validationDelay : int = 500
    +validationUrl : array|string
    -_fields : ActiveField[] = []
    +beginField(model : Model, attribute : string, options : array = []) : string
    +endField() : string
    +errorSummary(models : Model|Model[], options : array = []) : string
    +field(model : Model, attribute : string, options : array = []) : ActiveField
    #getClientOptions() : array
    +init()
    +registerClientScript()
    +run()
    +{static}validate(model : Model, attributes : mixed = null) : array
    +{static}validateMultiple(models : array, attributes : mixed = null) : array
}
class yii.widgets.ActiveForm extends yii.base.Widget
class yii.widgets.ActiveFormAsset {
    +depends = ["yii\web\YiiAsset"]
    +js = ["yii.activeForm.js"]
    +sourcePath = "@yii/assets"
}
class yii.widgets.ActiveFormAsset extends yii.web.AssetBundle
abstract class yii.widgets.BaseListView {
    +dataProvider : yii.data.DataProviderInterface
    +emptyText : string|false
    +emptyTextOptions : array = ["empty"]
    +layout : string = "{summary}\\n{items}\\n{pager}"
    +options : array = []
    +pager : array = []
    +showOnEmpty : bool = false
    +sorter : array = []
    +summary : string
    +summaryOptions : array = ["summary"]
    +init()
    +renderEmpty() : string
    +renderItems() : string
    +renderPager() : string
    +renderSection(name : string) : string|bool
    +renderSorter() : string
    +renderSummary()
    +run()
}
class yii.widgets.BaseListView extends yii.base.Widget
class yii.widgets.Block {
    +renderInPlace : bool = false
    +init()
    +run()
}
class yii.widgets.Block extends yii.base.Widget
class yii.widgets.Breadcrumbs {
    +activeItemTemplate : string = "<li class="active">{link}</li>\\n"
    +encodeLabels : bool = true
    +homeLink : array
    +itemTemplate : string = "<li>{link}</li>\\n"
    +links : array = []
    +options : array = ["breadcrumb"]
    +tag : string = "ul"
    #renderItem(link : array, template : string) : string
    +run()
}
class yii.widgets.Breadcrumbs extends yii.base.Widget
class yii.widgets.ContentDecorator {
    +params : array = []
    +viewFile : string
    +init()
    +run()
}
class yii.widgets.ContentDecorator extends yii.base.Widget
class yii.widgets.DetailView {
    +attributes : array
    +formatter : array|Formatter
    +model : array|object
    +options : array = ["table table-striped table-bordered detail-view"]
    +template : string|callable = "<tr><th{captionOptions}>{label}</th><td{contentOptions}>{value}</td></tr>"
    +init()
    #normalizeAttributes()
    #renderAttribute(attribute : array, index : int) : string
    +run()
}
class yii.widgets.DetailView extends yii.base.Widget
class yii.widgets.FragmentCache {
    +cache : CacheInterface|array|string = "cache"
    +dependency : array|Dependency
    +duration : int = 60
    +dynamicPlaceholders : array
    +enabled : bool = true
    +variations : array
    -_content : string|bool
    #calculateKey() : mixed
    +getCachedContent() : string|false
    +init()
    +run()
    #updateDynamicContent(content : string, placeholders : array) : string
}
class yii.widgets.FragmentCache extends yii.base.Widget
class yii.widgets.InputWidget {
    +attribute : string
    +field : yii.widgets.ActiveField
    +model : yii.base.Model
    +name : string
    +options : array = []
    +value : string
    #hasModel() : bool
    +init()
    #renderInputHtml(type : string) : string
}
class yii.widgets.InputWidget extends yii.base.Widget
class yii.widgets.LinkPager {
    +activePageCssClass : string = "active"
    +disableCurrentPageButton : bool = false
    +disabledListItemSubTagOptions : array = []
    +disabledPageCssClass : string = "disabled"
    +firstPageCssClass : string = "first"
    +firstPageLabel : string|bool = false
    +hideOnSinglePage : bool = true
    +lastPageCssClass : string = "last"
    +lastPageLabel : string|bool = false
    +linkContainerOptions : array = []
    +linkOptions : array = []
    +maxButtonCount : int = 10
    +nextPageCssClass : string = "next"
    +nextPageLabel : string|bool = "&raquo;"
    +options : array = ["pagination"]
    +pageCssClass : string
    +pagination : yii.data.Pagination
    +prevPageCssClass : string = "prev"
    +prevPageLabel : string|bool = "&laquo;"
    +registerLinkTags : bool = false
    #getPageRange() : array
    +init()
    #registerLinkTags()
    #renderPageButton(label : string, page : int, class : string, disabled : bool, active : bool) : string
    #renderPageButtons() : string
    +run()
}
class yii.widgets.LinkPager extends yii.base.Widget
class yii.widgets.LinkSorter {
    +attributes : array
    +linkOptions : array = []
    +options : array = ["sorter"]
    +sort : yii.data.Sort
    +init()
    #renderSortLinks() : string
    +run()
}
class yii.widgets.LinkSorter extends yii.base.Widget
class yii.widgets.ListView {
    +afterItem : Closure
    +beforeItem : Closure
    +itemOptions : array|Closure = []
    +itemView : string|callable
    +options : array = ["list-view"]
    +separator : string = "\\n"
    +viewParams : array = []
    #renderAfterItem(model : mixed, key : mixed, index : int) : string|null
    #renderBeforeItem(model : mixed, key : mixed, index : int) : string|null
    +renderItem(model : mixed, key : mixed, index : int) : string
    +renderItems() : string
}
class yii.widgets.ListView extends yii.widgets.BaseListView
class yii.widgets.MaskedInput {
    +{static}PLUGIN_NAME = "inputmask"
    +aliases : array
    +clientOptions : array = []
    +definitions : array
    +mask : string|array|JsExpression
    +options : array = ["form-control"]
    +type : string = "text"
    #_hashVar : string
    #hashPluginOptions(view : View)
    +init()
    #initClientOptions()
    +registerClientScript()
    +run()
}
class yii.widgets.MaskedInput extends yii.widgets.InputWidget
class yii.widgets.MaskedInputAsset {
    +depends = ["yii\web\YiiAsset"]
    +js = ["jquery.inputmask.bundle.js"]
    +sourcePath = "@bower/inputmask/dist"
}
class yii.widgets.MaskedInputAsset extends yii.web.AssetBundle
class yii.widgets.Menu {
    +activateItems : bool = true
    +activateParents : bool = false
    +activeCssClass : string = "active"
    +encodeLabels : bool = true
    +firstItemCssClass : string
    +hideEmptyItems : bool = true
    +itemOptions : array = []
    +items : array = []
    +labelTemplate : string = "{label}"
    +lastItemCssClass : string
    +linkTemplate : string = "<a href="{url}">{label}</a>"
    +options : array = []
    +params : array
    +route : string
    +submenuTemplate : string = "\\n<ul>\\n{items}\\n</ul>\\n"
    #isItemActive(item : array) : bool
    #normalizeItems(items : array, active : bool) : array
    #renderItem(item : array) : string
    #renderItems(items : array) : string
    +run()
}
class yii.widgets.Menu extends yii.base.Widget
class yii.widgets.Pjax {
    +autoIdPrefix = "p"
    +clientOptions : array
    +counter = 0
    +enablePushState : bool = true
    +enableReplaceState : bool = false
    +formSelector : string|false
    +linkSelector : string|false
    +options : array = []
    +scrollTo : bool|int = false
    +submitEvent : string = "submit"
    +timeout : int = 1000
    +init()
    +registerClientScript()
    #requiresPjax() : bool
    +run()
}
class yii.widgets.Pjax extends yii.base.Widget
class yii.widgets.PjaxAsset {
    +depends = ["yii\web\YiiAsset"]
    +js = ["jquery.pjax.js"]
    +sourcePath = "@bower/yii2-pjax"
}
class yii.widgets.PjaxAsset extends yii.web.AssetBundle
class yii.widgets.Spaceless {
    +init()
    +run()
}
class yii.widgets.Spaceless extends yii.base.Widget
@enduml
